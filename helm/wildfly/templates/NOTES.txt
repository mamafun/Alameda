Wildfly is deployed.

For frontend, please do:
{{- if contains "NodePort" .Values.service.web.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "wildfly.fullname" . }}-web)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

and visit http://$NODE_IP:$NODE_PORT to use your application
{{- else if contains "ClusterIP" .Values.service.web.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "wildfly.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl port-forward $POD_NAME --namespace {{ .Release.Namespace }} {{ .Values.service.web.port }}:{{ .Values.service.web.port }}
and visit http://127.0.0.1:{{ .Values.service.web.port }} to use your application"
{{- end }}

For Wildfly backend, please do:
{{- if contains "NodePort" .Values.service.console.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "wildfly.fullname" . }}-console)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

and visit http://$NODE_IP:$NODE_PORT to use wildfly backend
{{- else if contains "ClusterIP" .Values.service.web.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "wildfly.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl port-forward $POD_NAME --namespace {{ .Release.Namespace }} {{ .Values.service.console.port }}:{{ .Values.service.console.port }}
and visit http://127.0.0.1:{{ .Values.service.console.port }} to use your application"
{{- end }}

