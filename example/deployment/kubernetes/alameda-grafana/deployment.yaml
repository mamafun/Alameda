---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: alameda-grafana
  labels:
    app: grafana
    chart: grafana-2.0.1
    release: alameda-grafana
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: alameda-grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: alameda-grafana
    spec:
      serviceAccountName: alameda-grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
        
      initContainers:
        - name: download-dashboards
          image: "appropriate/curl:latest"
          imagePullPolicy: IfNotPresent
          command: ["sh", "/etc/grafana/download_dashboards.sh"]
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/download_dashboards.sh"
              subPath: download_dashboards.sh
            - name: storage
              mountPath: "/var/lib/grafana"
      containers:
        - name: grafana
          image: "grafana/grafana:5.4.3"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: ldap
              mountPath: "/etc/grafana/ldap.toml"
              subPath: ldap.toml
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/clusterhealth.json"
              subPath: "clusterhealth.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/nodehealth.json"
              subPath: "nodehealth.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/prediction-recommendation.json"
              subPath: "prediction-recommendation.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/recommendation-alamedascaler.json"
              subPath: "recommendation-alamedascaler.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/recommendation-cluster.json"
              subPath: "recommendation-cluster.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/recommendation-namespace.json"
              subPath: "recommendation-namespace.json"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: datasources.yaml
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: dashboardproviders.yaml
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: alameda-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: alameda-grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            
          resources:
            {}
            
      volumes:
        - name: config
          configMap:
            name: alameda-grafana
        - name: dashboards-alameda
          configMap:
            name: alameda-grafana-dashboards-alameda
        - name: ldap
          secret:
            secretName: alameda-grafana
            items:
              - key: ldap-toml
                path: ldap.toml
        - name: storage
          emptyDir: {}
